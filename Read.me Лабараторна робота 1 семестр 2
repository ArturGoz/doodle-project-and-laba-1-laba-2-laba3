uml after refactored code https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/tree/main/uml%20for%20new%20code 
uml for old code https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/tree/main/uml%20diag
Лаба 1а
1. Використав свій проект з 1 семестру
2. Мій проект це - гра тому юніт тестів я не робив, бо не можу це створити.
3. Use Case, Class, Component, Composite Structure, Deployment, Package, Sequence, Activity, State. остальні діаграми я не бачів сенсу роботи(конкретно чому описав у папках uml в read.me файлі)
4. Змінив структуру коду.
5. Виконані у коміті refactoring code ссилка (https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/commit/7cc47808a05e8c7c03e38a2b47a70d686dc61cd3)
6. Ніяк не змінює логіку програми.
7. 
8. Додав абстракний клас Abstract_platform для своїх платформ. Також повидаляв багато однотипних класів та створював загальні(Doodle_mech, All_levels).
Також відредагував деякі класи один з них class coordinates зробив його більш таким "шаблонним" для інших класів як Doodle_mech traps, які наслідують coordinates.
Створив клас CreateGame який і реалізовує мою гру. Усі дані які я задавав в методі  MainWindow::startDoodleGame() реалізовуються в конструкторі CreateGame також реалізував в класі
CreateGame методи як RunGame() and ResetGame() які запускають мою гру.
Також я додав #define Width_of_screen 400 #define Height_of_screen 533 для кращого уявлення координатів.
Якщо підсумувати мі й рефакторинг то я зробив його більш читабельним та на мою думку кращим по принципам ООП зробив абстракні класи і тд.
також змінив метод void RunGame (bool& controller,QWidget* parent,Music &music, TextureManager& textureManager,HardLevel& hardLevel,MediumLevel& mediumLevel,EasyLevel& easyLevel,RenderWindow& app, Game& game, traps& bomb, Level& level, Platform& Green_Platform, WhitePlatform& White_Platform, MovingPlatform& Blue_Platform, ExtremePlatform& YellowPlatform, Score& sc, Sprite score[], Sprite& sGameOver, Sprite& sBomb, Sprite& sBackground, Sprite& sPlat, Sprite& sPers, Sprite& sWhitePlat, Sprite& sBluePlatfrom, Sprite& sYellowPlatform, BasicMechanics& mech,int& Size, bool gameover)
який мене бісив на більш зручний game.RunGame(controller,this,app,true);

Лаба 1d
1.Чому було обрано саме цей інструмент, а не аналоги?
Викоривстав інструмент моделювання draw.io . Використав його, бо при пошуку онлайн інтсрументів моделювання в інтернеті draw.io було першим гіперпосиланням), 
тому подумав, що це крутий інтсрумент, аналоги не розглядав
2.	Наскільки просто та зрозуміло було отримати, встановити, налаштувати та почати використовувати цей інструмент?
Доволі просто було використовувати цей предмет. Зарегеструвався та пішов моделювати ). Всі деталі моделювання були перед очами.
3.Наскільки зрозумілою та корисною була документація інструмент?
Не читав документацію інструменту.Тому нічого не можу сказати).
4.Наскільки було зрозуміло, як саме використовувати інструмент, які функції/засоби/вікна/елементи керування використовувати для вирішення поставлених задач?
Доволі все було зрозуміло як використовувати, якщо знати як моделювати конкретні діаграми.
Під час моделювання всі зв'язки об'єктів були підписані необхідними назвами. Всі необхідні елементи можна було знайти в вкладці uml.
5.Чи всі 14 типів діаграм з UML 2.5 підтримує інструмент? Якщо ні – вкажіть, які саме не підтримуються
Я не використовував шаблони використання для діаграм.Тому на це питання я не можу відповісти точно.Але є багато елементів за допомогою яких можна створити усі необхідні діаграми.
6.	Чи всі можливості, доступні на кожному типі діаграм, підтримує інструмент? Якщо ні – вкажіть, що саме не підтримується, та для якого типу діаграм
У моєму випадку я не зустрічав труднощі з можливостями створити діаграму за домогою елементів. Тому так все підримує що потрібно.
7.	Чи використовували якісь додаткові можливості інструменту, наприклад генерацію коду з діаграм чи відновлення діаграм з коду? Наскільки гарно та правильно працюють ці можливості?
Ні. я не використовував додаткові можливості інструменту(їх не зустрів).
8.	Наскільки зручно було використовувати інструмент, чи не треба було виконувати багато надлишкових дій?
Я б не сказав що було доволі все зручно).Скачування діаграми не є ефективним. При скачуванні в форматі діаграми png було погано зображено кольори звязків, і потрібно 
було заново заходити та перефарбовувати повністю діаграму щоб було зручно дивитися на неї. З рештою завдань все було ок.
9.	Наскільки зрозумілою була поведінка інструменту в різних ситуаціях? Чи не виникали ситуації, коли незрозуміло, чому були виконані якісь дії чи як досягли певного стану?
Поведінка інструменту була адекваною, я не зустрів ніяких багів або незручностей при моделюванні.
10.	Чи виникали якісь проблеми з використанням інструменту? Чи вдалось їх вирішити, як саме?
Скачування діаграми не є ефективним. При скачуванні в форматі діаграми png було погано зображено кольори звязків, і потрібно 
було заново заходити та перефарбовувати повністю діаграму щоб було зручно дивитися на неї. З рештою завдань все було ок.
В деяких ситуаціях я мав скрінити зображення діаграми щоб Вам надіслати.
11.	Що хорошого можна сказати про цей інструмент, які були позитивні аспекти використання інструменту?
Легкий доступ до інструменту. Нічого не потрібно качати, щоб розпочати використовувати цей предмет.
12.	Що поганого можна сказати про цей інструмент, які були негативні аспекти використання інструменту?
Негативні аспекти були у зображені скаченої діаграми. Нічого не було видно через чорний колір.
13.Якби довелось вирішувати аналогічну задачу, але вже враховуючи досвід використання в цій лабораторній роботі,
що варто було б робити так само, а що змінити? Можливо, використати інший інструмент,
чи використати інші можливості цього інструменту, чи інакше організувати процес розробки діаграм, чи ще щось?

Я би спробував використати шаблони щодо потрібних мені діаграм. Також можливо спробував би інший інструмент, адже не знаю як порівнювати інші інструменти з цим інструментом.
А також би відразу змінював колір моїх діаграм
