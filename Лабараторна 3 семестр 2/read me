Лабораторна робота №3a

Виконував алгоритм побудови лінійної регресії 
https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/blob/main/%D0%9B%D0%B0%D0%B1%D0%B0%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%BD%D0%B0%203%20%D1%81%D0%B5%D0%BC%D0%B5%D1%81%D1%82%D1%80%202/%D0%9B%D1%96%D0%BD%D1%96%D0%B9%D0%BD%D0%B0%20%D1%80%D0%B5%D0%B3%D1%80%D0%B5%D1%81%D1%96%D1%8F.cpp

документація алгоритму:
https://1drv.ms/w/c/2ee4e61582dd9aa3/EaOa3YIV5uQggC4rAQAAAAABHiKjR_JFWUlyeeGLIrtd1A?e=bYOvai

Усі вимоги були виконані: тести, правильний об’єктно-орієнтований дизайн, послідовна та паралельна робота алгоритму та його вимір часу.
Вхід даних не має великого впливу на час виконання мого алгоритму.
Середній час обчислення алгоритму:

time with 2 threads: 6085 microseconds
time with 3 threads: 2586 microseconds
time without threads : 787 microseconds

Можна дійти до висновку, що мій алгоритм є доволі легким для мультипрограмування, мультипрограмування було б доречнішим для складнішого алгоритму.
Важливо пам’ятати, що створення та управління потоками також вимагає деяких ресурсів, тому для дуже малих обчислень витрати на многопоточність можуть перевищити її переваги.

Лабораторна робота №3b

Виконував роботу у своєму навчальному проекті
Моя робота це гра платформер
Код моєї гри відповідно знаходиться у репозиторії.
Усі вимоги були виконані: тести, правильний об’єктно-орієнтований дизайн,графічний інтерфейс,  послідовна та паралельна робота алгоритму та його вимір часу.

Моя гра вимагає послідовної роботи алгоритму, бо багато компонент взаємодіють один між одним, тому при мультипоточному програмуванні у мене программа виконувалась не ефективно.
Але є декілька моментів для пришвидшення коду.

Поділив роботу завантаження текстур гри на 2 потоки, що пришвидшило завантаження текстур у 1,5  разів.
https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/blob/3b2165384cbf8a2502fd55f6fc10a4645ad9a1c9/doodle.h#L302

Виділив поток що перевіряє зміну алгоритму руху мого персонажа. Для алгоритму руху персонажа не є важлива послідовна робота.Пришвидшило роботу на декілька мілісекунд.
https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/blob/3b2165384cbf8a2502fd55f6fc10a4645ad9a1c9/doodle.h#L914

Також пробував тестувати графічний інтерфейс за допомогою потоків, але у моїй роботі не має важких робіт для потоків, а лише уповільняло програму.
Мої спроби:
https://github.com/ArturGoz/doodle-project-and-laba-1-laba-2-laba3/blob/3b2165384cbf8a2502fd55f6fc10a4645ad9a1c9/mainwindow.cpp#L103

